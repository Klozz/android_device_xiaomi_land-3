type gx_fpd, domain;
type gx_fpd_exec, exec_type, vendor_file_type, file_type, coredomain;

# gx_fpd
init_daemon_domain(gx_fpd)

# Allow ioctl commands
allowxperm gx_fpd self:{
    socket
    netlink_socket
    netlink_generic_socket
    netlink_kobject_uevent_socket }
  ioctl { 0 };

# allow HAL module to read dir contents
allow gx_fpd system_data_file:dir create_dir_perms;
allow gx_fpd gx_fpd_data_file:file create_file_perms;

# allow HAL module to read/write/unlink contents of this dir
allow gx_fpd gx_fpd_data_file:dir create_dir_perms;

#Allow access to goodix device
allow gx_fpd gx_fpd_device:chr_file rw_file_perms;

#Allow access to tee device
allow gx_fpd tee_device:chr_file rw_file_perms;

# Allow access to ion device
allow gx_fpd ion_device:chr_file rw_file_perms;

# Allow read write sysfs
allow gx_fpd sysfs_fp:file rw_file_perms;

#allow read/write property
set_prop(gx_fpd, system_prop)

allow gx_fpd fuse:dir search;
allow gx_fpd fuse:file { getattr open append };
allow gx_fpd self:capability dac_override;
allow gx_fpd storage_file:dir search;
allow gx_fpd storage_file:lnk_file read;
allow gx_fpd vfat:dir search;
allow gx_fpd vfat:file  { read write getattr open };
r_dir_file(gx_fpd, firmware_file)
